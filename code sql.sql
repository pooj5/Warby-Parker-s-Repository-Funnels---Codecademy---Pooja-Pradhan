Warby Parker Marketing Funnels--to display all questions asked in the survey--SELECT distinct questionFROM survey;--to get familiarized with columns in quiz table--SELECT * FROM quizLIMIT 10;--to get familiarized with columns in home_try_on table--SELECT *FROM home_try_onLimit 10;--display all possible answers to the “shape” question in the survey--SELECT distinct shapeFROM quiz;--display all possible answers to the “style” question in the survey--SELECT distinct styleFROM quiz;--display all possible answers to the “fit” question in the survey--SELECT distinct fitFROM quiz;--finds total number of models available--SELECT COUNT(distinct model_name) as 'Model Count'FROM purchase;--finds all colors available--SELECT distinct colorFROM purchase;--finds prices of all glasses--SELECT distinct priceFROM purchase;Select all columns from the first 10 rows. What columns does the table have?SELECT *FROM surveyLIMIT 10;What is the number of responses for each question?SELECT question as ‘Question’,	    COUNT(distinct user_id) as ‘Number of Users’FROM surveyGROUP BY 1;--to examine first five rows of the quiz, home_try_on, and purchase tables—SELECT * FROM quizLIMIT 5;SELECT * FROM home_try_onLIMIT 5;SELECT * FROM purchaseLIMIT 5;--to combine the quiz, home_try_on and purchase tables. Limited first to 10 rows--SELECT distinct q.user_id,         	    CASE         	    	WHEN h.address IS NOT NULL THEN 'True' ELSE 'False'          		END as 'is_home_try_on',                h.number_of_pairs,                CASE         		WHEN p.product_id IS NOT NULL THEN 'True' ELSE 'False'          		END as 'is_purchase'FROM quiz qLEFT JOIN home_try_on h ON q.user_id = h.user_idLEFT JOIN purchase p on h.user_id = p.user_idLIMIT 10;-- To figure out how many users participated in the home try-on program--WITH funnels AS (SELECT distinct q.user_id,         CASE         	WHEN h.address IS NOT NULL THEN 'True' ELSE 'False'          	END as 'is_home_try_on',        h.number_of_pairs,        CASE         	WHEN p.product_id IS NOT NULL THEN 'True' ELSE 'False'          	END as 'is_purchase'FROM quiz qLEFT JOIN home_try_on h ON q.user_id = h.user_idLEFT JOIN purchase p on h.user_id = p.user_id)SELECT count(distinct user_id) AS 'Number of Home Try-On Users'FROM funnels fWHERE f.is_home_try_on = 'True';-- To figure out how many users purchased a pair of glasses--WITH funnels AS (SELECT 	distinct q.user_id,         CASE         	WHEN h.address IS NOT NULL THEN 'True' ELSE 'False'          	END as 'is_home_try_on',         h.number_of_pairs,         CASE         	WHEN p.product_id IS NOT NULL THEN 'True' ELSE 'False'          	END as 'is_purchase'FROM quiz qLEFT JOIN home_try_on h ON q.user_id = h.user_idLEFT JOIN purchase p on h.user_id = p.user_id)SELECT count(distinct user_id) AS 'Number of Users that Purchased'FROM funnels fWHERE f.is_purchase = 'True';--to find how many users received 3 pairs of glasses vs. 5 pairs of glasses--SELECT number_of_pairs as 'Number of Pairs',               COUNT(distinct user_id) as 'Number of Users'FROM home_try_onGROUP BY number_of_pairs;--insights into purchase table--SELECT model_name as 'Model Name’,       style as 'Style',       price as 'Price',       color as 'Color',       COUNT(distinct user_id) as 'Number of      Users'FROM purchaseGROUP BY 1ORDER BY 3, 4;--to find most common results from the style quiz--SELECT question as 'Question', 			 response as 'Answer',               COUNT(distinct user_id) as 'Number of Users'FROM survey GROUP BY 1, 2ORDER BY 1, 3;Pooja PradhanAugust 8th, 2018